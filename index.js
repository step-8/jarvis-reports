const diffMinutes = function (t) { var e = ((new Date).getTime() - t.getTime()) / 1e3; return e /= 60, Math.abs(Math.round(e)) }, toRow = t => `<tr>\n      <td>${t.username}</td>\n      <td>${Math.floor(t.status.passed / totalTests * 100)}</td>\n      <td>${diffMinutes(new Date(t.timestamp))}</td>\n      <td>${t.suite}</td>\n      <td>${t.grade}</td>\n    </tr>`, updateDetails = function (t) { const e = t.sort((t, e) => e.status.passed - t.status.passed).map(toRow).join(""); document.getElementById("main").innerHTML = e }, mergeJSON = (t, e) => { const a = JSON.parse(t), n = JSON.parse(e); return a.map(t => { const e = n.find(e => e.username === t.username); if (e) return { ...t, ...e } }) }, get = async function (t) { const e = await fetch(`https://wire-github.herokuapp.com/${t}/`); return await e.json() }, update = async t => { const e = localStorage.getItem("time"); (!e || +t > +e + 6e4) && (console.log("Fetching data"), localStorage.setItem("time", +t), localStorage.setItem("interns", JSON.stringify(await get("report"))), localStorage.setItem("grades", JSON.stringify(await get("grades")))); const a = localStorage.getItem("interns"), n = localStorage.getItem("grades"), s = mergeJSON(a, n); updateDetails(s) }; update(new Date);